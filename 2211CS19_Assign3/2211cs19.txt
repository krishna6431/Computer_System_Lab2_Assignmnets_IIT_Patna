TestCases:
Testcase 1: 5 3
Enter The Value of N: 
Enter the Value of K: 

Given n = 5 and k = 3, the safe position is 4.

Steps Are As Follows: 

Step 1: 3rd Ball is Removed; The remaining balls are: 1, 2, 4, 5.

The count will start from 4th ball.

Step 2: 3rd Ball is Removed; The remaining balls are: 2, 4, 5.

The count will start from 2nd ball.

Step 3: 3rd Ball is Removed; The remaining balls are: 2, 4.

The count will start from 2nd ball.

Step 4: 3rd Ball is Removed; The remaining balls are: 4.


Testcase 2 : 1 3
Enter The Value of N: 
Enter the Value of K: 

Given n = 1 and k = 3, the safe position is 1.

Steps Are As Follows:

Testcase 3 : 7 3
Enter The Value of N: 
Enter the Value of K: 

Given n = 7 and k = 3, the safe position is 4.

Steps Are As Follows: 

Step 1: 3rd Ball is Removed; The remaining balls are: 1, 2, 4, 5, 6, 7.

The count will start from 4th ball.

Step 2: 3rd Ball is Removed; The remaining balls are: 1, 2, 4, 5, 7.

The count will start from 7th ball.

Step 3: 3rd Ball is Removed; The remaining balls are: 1, 4, 5, 7.

The count will start from 4th ball.

Step 4: 3rd Ball is Removed; The remaining balls are: 1, 4, 5.

The count will start from 1st ball.

Step 5: 3rd Ball is Removed; The remaining balls are: 1, 4.

The count will start from 1st ball.

Step 6: 3rd Ball is Removed; The remaining balls are: 4.

Testcase 4 : 10 4
Enter The Value of N: 
Enter the Value of K: 

Given n = 10 and k = 4, the safe position is 5.

Steps Are As Follows: 

Step 1: 4th Ball is Removed; The remaining balls are: 1, 2, 3, 5, 6, 7, 8, 9, 10.

The count will start from 5th ball.

Step 2: 4th Ball is Removed; The remaining balls are: 1, 2, 3, 5, 6, 7, 9, 10.

The count will start from 9th ball.

Step 3: 4th Ball is Removed; The remaining balls are: 1, 3, 5, 6, 7, 9, 10.

The count will start from 3rd ball.

Step 4: 4th Ball is Removed; The remaining balls are: 1, 3, 5, 6, 9, 10.

The count will start from 9th ball.

Step 5: 4th Ball is Removed; The remaining balls are: 1, 5, 6, 9, 10.

The count will start from 5th ball.

Step 6: 4th Ball is Removed; The remaining balls are: 1, 5, 6, 9.

The count will start from 1st ball.

Step 7: 4th Ball is Removed; The remaining balls are: 1, 5, 6.

The count will start from 1st ball.

Step 8: 4th Ball is Removed; The remaining balls are: 5, 6.

The count will start from 5th ball.

Step 9: 4th Ball is Removed; The remaining balls are: 5.

Testcase 5 : 10 12
Enter The Value of N: 
Enter the Value of K: 

Given n = 10 and k = 12, the safe position is 10.

Steps Are As Follows: 

Step 1: 12th Ball is Removed; The remaining balls are: 1, 3, 4, 5, 6, 7, 8, 9, 10.

The count will start from 3rd ball.

Step 2: 12th Ball is Removed; The remaining balls are: 1, 3, 4, 6, 7, 8, 9, 10.

The count will start from 6th ball.

Step 3: 12th Ball is Removed; The remaining balls are: 1, 3, 4, 6, 7, 8, 10.

The count will start from 10th ball.

Step 4: 12th Ball is Removed; The remaining balls are: 1, 3, 4, 7, 8, 10.

The count will start from 7th ball.

Step 5: 12th Ball is Removed; The remaining balls are: 1, 3, 7, 8, 10.

The count will start from 7th ball.

Step 6: 12th Ball is Removed; The remaining balls are: 1, 3, 7, 10.

The count will start from 10th ball.

Step 7: 12th Ball is Removed; The remaining balls are: 1, 3, 10.

The count will start from 10th ball.

Step 8: 12th Ball is Removed; The remaining balls are: 1, 10.

The count will start from 10th ball.

Step 9: 12th Ball is Removed; The remaining balls are: 10.




Time Complexity : 
The time complexity of this code is O(n log n) due to the use of a set data structure. The set is used to sort and print the remaining balls after each iteration of the Given Problem. The set's insert function, which is used to insert each ball into the set, has a time complexity of O(log n) and the for loop that iterates over the set has a time complexity of O(n). 
Additionally, the required  solution in the "explainSteps" function takes O(n) time to compute, as it iterates through the circular singly linked list and performs constant time operations on each iteration. Overall, the time complexity of this code is O(n log n).
